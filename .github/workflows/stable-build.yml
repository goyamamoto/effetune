name: Stable Build and Release

on:
  push:
    branches:
      - stable

permissions:
  contents: write

jobs:
  stable-build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm ci

      - name: Append "-y-stable" to version (Unix)
        if: runner.os != 'Windows'
        id: versioning
        shell: bash
        run: |
          version=$(node -p "require('./package.json').version")
          new_version="${version}-y-stable"
          echo "new_version=$new_version" >> $GITHUB_OUTPUT
          sudo apt-get update && sudo apt-get install -y jq
          jq ".version = \"$new_version\"" package.json > tmp.json && mv tmp.json package.json

      - name: Append "-y-stable" to version (Windows)
        if: runner.os == 'Windows'
        id: versioning
        shell: pwsh
        run: |
          $version = node -p "require('./package.json').version"
          $newVersion = "$version-y-stable"
          echo "new_version=$newVersion" >> $env:GITHUB_OUTPUT
          $pkg = Get-Content package.json -Raw | ConvertFrom-Json
          $pkg.version = $newVersion
          $pkg | ConvertTo-Json -Depth 10 | Set-Content package.json

      - name: Build Electron App
        run: |
          npm run clean
          npm run build
        env:
          USE_HARD_LINKS: false
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Git Tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git commit -am "Tag release ${{ steps.versioning.outputs.new_version }}" || echo "No changes"
          git tag "v${{ steps.versioning.outputs.new_version }}"
          git push origin stable --follow-tags

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.versioning.outputs.new_version }}
          files: |
            dist/**/*.dmg
            dist/**/*.exe
            dist/**/*.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}